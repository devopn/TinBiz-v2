from aiogram import Router, types, F
from aiogram.filters import Command
from db.models import *
from db import service
from states import RegistrationState
from aiogram.fsm.context import FSMContext
router = Router()

from keyboards.cancel_moderate_keyboard import get_cancel_moderate_keyboard
from keyboards.menu_keyboard import get_menu_keyboard
@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    await state.clear()
    user = await service.get_user(id=message.from_user.id)
    if user is None:
        await message.answer("*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n@TinBiz\_bot - –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π.", parse_mode="Markdown")
        await state.set_state(RegistrationState.name)
        await message.answer("üîñ<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>\n–®–∞–≥ 1 –∏–∑ 5\n<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è</i>", parse_mode="HTML")
    elif not user.moderated:
        await message.answer("–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏", reply_markup=get_cancel_moderate_keyboard())
    else:
        await message.answer_photo(photo=user.photo, caption=str(user), reply_markup=get_menu_keyboard())

